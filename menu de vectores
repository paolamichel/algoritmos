#include <iostream>
#include <conio.h>
#include <stdio.h>
using namespace std;
void cargar(int vec[],int n){
	int i;
	for(i=0;i<n;i++){
		cout<<"ingrese el numero:";
		cin>>vec[i];
	}
}
void mostrar(int vec[],int n){
	int i;
	for(i=0;i<n;i++){
		cout<<" "<<vec[i];
	}
}
bool verificarprimo(int n){
	int i;
	bool k=true;
	for(i=2;i<n;i++){
		if(n%i==0){
			k=false;
		}
	}
	return(k);
}
void eliminarprimo(int vec[],int &n){
	int i,k;
	for(i=0;i<n;i++){
		if(verificarprimo(vec[i])==true){
			for(k=i;k<n-1;k++){
				vec[k]=vec[k+1];
			}
			n--;
			i--;
		}
	}
}
int obtenerNsimoprimo(int n){
	int i,cp=0,c=0;
	while(cp<n){
		c++;
		if(verificarprimo(c)==true){
			cp++;
		}
	}
	return(c);
}
void generarprimosPF(int vec[],int n){
	int i,c=n-1,cx=0;
	int k=0;
	for(i=1;i<=n;i++){
		if(k==0){
			vec[cx]=obtenerNsimoprimo(i);
			cx++;
			k=1;
		}else{
			vec[c]=obtenerNsimoprimo(i);
			c--;
			k=0;
		}
	}
}
void ordenarvec(int vec[],int n){
	int aux,i,j;
	for(i=0;i<n;i++){
		for(j=i+1;j<n;j++){
			if(vec[i]>vec[j]){
				aux=vec[i];
				vec[i]=vec[j];
				vec[j]=aux;
			}
		}
	}
}
void main(){
	int vec[100];
	int n;
	cout<<"ingrese el tamaÃ±o del vector:";
	cin>>n;
	cargar(vec,n);
	mostrar(vec,n);
	cout<<endl;
	//eliminarprimo(vec,n);
	ordenarvec(vec,n);
	mostrar(vec,n);
	getch();
}
